{
  "stats": {
    "suites": 4,
    "tests": 6,
    "passes": 3,
    "pending": 0,
    "failures": 3,
    "start": "2023-12-13T15:01:25.134Z",
    "end": "2023-12-13T15:01:25.810Z",
    "duration": 676
  },
  "tests": [
    {
      "title": "is set as Scuber",
      "fullTitle": "index.js companyName is set as Scuber",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is defined as a const",
      "fullTitle": "index.js companyName is defined as a const",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is declared as equal to Chelsea",
      "fullTitle": "index.js mostProfitableNeighborhood is declared as equal to Chelsea",
      "duration": 2,
      "currentRetry": 0,
      "err": {
        "message": "expected 'chelsea' to equal 'Chelsea'",
        "showDiff": true,
        "actual": "chelsea",
        "expected": "Chelsea",
        "stack": "AssertionError: expected 'chelsea' to equal 'Chelsea'\n    at Context.<anonymous> (test/indexTest.js:20:45)\n    at processImmediate (internal/timers.js:461:21)"
      }
    },
    {
      "title": "is defined using let",
      "fullTitle": "index.js mostProfitableNeighborhood is defined using let",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is declared as equal to Susan Smith",
      "fullTitle": "index.js companyCeo is declared as equal to Susan Smith",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "ReferenceError: companyCeo is not defined\n    at Context.<anonymous> (test/indexTest.js:30:14)\n    at processImmediate (internal/timers.js:461:21)",
        "message": "companyCeo is not defined"
      }
    },
    {
      "title": "is defined using let",
      "fullTitle": "index.js companyCeo is defined using let",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "message": "Expected companyCeo to be defined using let: expected 'const companyName = \"Scuber\"\\nlet mostProfitableNeighborhood = \"chelsea\";\\nlet chelsea = \"chelsea\";\\nchelsea= \"chelsea\";\\ncompanyCeo = \"Susan Smith\";\\n' to match /let companyCeo/",
        "showDiff": false,
        "actual": "const companyName = \"Scuber\"\nlet mostProfitableNeighborhood = \"chelsea\";\nlet chelsea = \"chelsea\";\nchelsea= \"chelsea\";\ncompanyCeo = \"Susan Smith\";\n",
        "stack": "AssertionError: Expected companyCeo to be defined using let: expected 'const companyName = \"Scuber\"\\nlet mostProfitableNeighborhood = \"chelsea\";\\nlet chelsea = \"chelsea\";\\nchelsea= \"chelsea\";\\ncompanyCeo = \"Susan Smith\";\\n' to match /let companyCeo/\n    at Context.<anonymous> (test/indexTest.js:34:21)\n    at processImmediate (internal/timers.js:461:21)"
      }
    }
  ],
  "pending": [],
  "failures": [
    {
      "title": "is declared as equal to Chelsea",
      "fullTitle": "index.js mostProfitableNeighborhood is declared as equal to Chelsea",
      "duration": 2,
      "currentRetry": 0,
      "err": {
        "message": "expected 'chelsea' to equal 'Chelsea'",
        "showDiff": true,
        "actual": "chelsea",
        "expected": "Chelsea",
        "stack": "AssertionError: expected 'chelsea' to equal 'Chelsea'\n    at Context.<anonymous> (test/indexTest.js:20:45)\n    at processImmediate (internal/timers.js:461:21)"
      }
    },
    {
      "title": "is declared as equal to Susan Smith",
      "fullTitle": "index.js companyCeo is declared as equal to Susan Smith",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "ReferenceError: companyCeo is not defined\n    at Context.<anonymous> (test/indexTest.js:30:14)\n    at processImmediate (internal/timers.js:461:21)",
        "message": "companyCeo is not defined"
      }
    },
    {
      "title": "is defined using let",
      "fullTitle": "index.js companyCeo is defined using let",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "message": "Expected companyCeo to be defined using let: expected 'const companyName = \"Scuber\"\\nlet mostProfitableNeighborhood = \"chelsea\";\\nlet chelsea = \"chelsea\";\\nchelsea= \"chelsea\";\\ncompanyCeo = \"Susan Smith\";\\n' to match /let companyCeo/",
        "showDiff": false,
        "actual": "const companyName = \"Scuber\"\nlet mostProfitableNeighborhood = \"chelsea\";\nlet chelsea = \"chelsea\";\nchelsea= \"chelsea\";\ncompanyCeo = \"Susan Smith\";\n",
        "stack": "AssertionError: Expected companyCeo to be defined using let: expected 'const companyName = \"Scuber\"\\nlet mostProfitableNeighborhood = \"chelsea\";\\nlet chelsea = \"chelsea\";\\nchelsea= \"chelsea\";\\ncompanyCeo = \"Susan Smith\";\\n' to match /let companyCeo/\n    at Context.<anonymous> (test/indexTest.js:34:21)\n    at processImmediate (internal/timers.js:461:21)"
      }
    }
  ],
  "passes": [
    {
      "title": "is set as Scuber",
      "fullTitle": "index.js companyName is set as Scuber",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is defined as a const",
      "fullTitle": "index.js companyName is defined as a const",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is defined using let",
      "fullTitle": "index.js mostProfitableNeighborhood is defined using let",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    }
  ]
}